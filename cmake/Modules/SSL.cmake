if(ANDROID)
  # Prefer ABI-specific prebuilt OpenSSL under Contribs/android/<abi>/openssl/openssl-1.0.2c
  if(DEFINED ANDROID_ABI)
    if(ANDROID_ABI STREQUAL "armeabi-v7a")
      set(_SSL_ANDROID_PATH "${CONTRIB_PATH}/android/arm/openssl/openssl-1.0.2c")
    else()
      set(_SSL_ANDROID_PATH "${CONTRIB_PATH}/android/${ANDROID_ABI}/openssl/openssl-1.0.2c")
    endif()
  else()
    # Legacy fallback
    set(_SSL_ANDROID_PATH "${CONTRIB_PATH}/android/arm/openssl/openssl-1.0.2c")
  endif()

  if(EXISTS "${_SSL_ANDROID_PATH}")
    set(SSL_ROOT "${_SSL_ANDROID_PATH}")
  elseif(EXISTS "${CONTRIB_PATH}/openssl" AND EXISTS "${CONTRIB_PATH}/openssl/include/openssl/sha.h")
    # Fallback to generic contrib OpenSSL (headers under include/openssl)
    set(SSL_ROOT "${CONTRIB_PATH}/openssl")
  elseif(EXISTS "${CMAKE_SOURCE_DIR}/openssl")
    # Additional fallback: repository-level OpenSSL directory (headers under openssl/include)
    set(SSL_ROOT "${CMAKE_SOURCE_DIR}/openssl")
  else()
    # Do not hard-fail on Android; allow builds that do not need SSL
    set(SSL_ROOT "")
  endif()
else()
  # Non-Android platforms: keep existing lookup
  set(_SSL_ANDROID_PATH "${CONTRIB_PATH}/android/arm/openssl/openssl-1.0.2c")
  if(EXISTS "${_SSL_ANDROID_PATH}")
    set(SSL_ROOT "${_SSL_ANDROID_PATH}")
  elseif(EXISTS "${CONTRIB_PATH}/openssl" AND EXISTS "${CONTRIB_PATH}/openssl/include/openssl/sha.h")
    set(SSL_ROOT "${CONTRIB_PATH}/openssl")
  elseif(EXISTS "${CMAKE_SOURCE_DIR}/openssl")
    set(SSL_ROOT "${CMAKE_SOURCE_DIR}/openssl")
  else()
    message(FATAL_ERROR "OpenSSL not found. Expected at ${_SSL_ANDROID_PATH} or ${CONTRIB_PATH}/openssl")
  endif()
endif()

if(SSL_ROOT)
  file(TO_CMAKE_PATH "${SSL_ROOT}" SSL_ROOT)
  include_directories("${SSL_ROOT}/include")
  if(EXISTS "${SSL_ROOT}/lib")
    link_directories("${SSL_ROOT}/lib")
  endif()
endif()

# Determine if static libraries are present for linking
set(RBX_HAVE_OPENSSL_LIBS OFF CACHE INTERNAL "OpenSSL static libs available")
if(SSL_ROOT AND EXISTS "${SSL_ROOT}/lib/libssl.a" AND EXISTS "${SSL_ROOT}/lib/libcrypto.a")
  set(RBX_HAVE_OPENSSL_LIBS ON CACHE INTERNAL "OpenSSL static libs available")
endif()
