{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Roblox 2016 Source code","text":"<p>Warning</p> <p>This documentation is very unfinished and might contain styling errors and other stuff.</p> <p>this is a fixed version of roblox.7z (ROBLOX 2016 src)</p> <p>THIS FIXED VERSION IS NOT MADE BY ME! THIS IS A REUPLOAD OF (yungdooms)HIS REPO WHICH HE DELETED/PRIVATED</p>"},{"location":"#problems-with-source-code","title":"Problems with source code","text":"<pre><code>- Undo/Redo does not handle `Color3` properties accurately; they often revert to the nearest `BrickColor` value.\n- This can lead to inconsistencies, especially with `BodyColors`.\n</code></pre>"},{"location":"building/","title":"Building","text":"REQUIREMENTS <ul> <li>Visual Studio 2012 + Visual Studio 2012 Update 5</li> <li>Git</li> </ul> ANDROID BUILD REQUIREMENTS <ul> <li>Android Studio</li> <li>Android 28 NDK</li> <li>Android 15 + 28 SDK</li> <li>Java JDK 21</li> </ul> <p>You can safely ignore the android requirements if you are not building for Android</p>"},{"location":"building/#installing-requirements","title":"Installing Requirements","text":"<p>If you already have these you can skip directly Downloading The Project This assumes you have already downloaded the files, if not read the requirements note to see where to get them</p> Installing VS2012Installing Git <ol> <li>Mount the VS2012 iso (en_visual_studio_ultimate_2012_x86_dvd_2262106.iso)</li> <li>Click on vs_ultimate.exe</li> <li>Continue installation as you would<ul> <li>Make sure to only select C++ Foundation Classes if you want to save space</li> </ul> </li> <li>Once installed click close</li> <li>Eject the VS2012 iso and mount VS2012 Update 5 iso (mu_visual_studio_2012_update_5_x86_dvd_6967467.iso)</li> <li>Wait for it to complete</li> </ol> <ol> <li>Run the git setup file</li> <li>Click next until you get to install part</li> <li>Wait for it to install</li> <li>Click finish</li> </ol>"},{"location":"building/#downloading-the-project","title":"Downloading the project","text":"Using Git (Recommended)Downloading as a zip <ol> <li>Open a Powershell or a Command Prompt instance with administrator perms</li> <li> <p>Turn on Git longpaths:      Because there are some pretty long paths you can run this command to enable them:</p> <pre><code>git config --system core.longpaths true\n</code></pre> </li> <li> <p>Go into the path you want to want to download it into. (eg. <code>C:\\Users\\Alex\\Documents</code>)</p> </li> <li> <p>Cloning the project      Run</p> <pre><code>git clone https://github.com/alexs-stuff/roblox-2016-source-code\n</code></pre> <p>to clone and wait for it to finish</p> </li> <li> <p>Go into the directory it cloned to. (eg. <code>C:\\Users\\Alex\\Documents\\roblox-2016-source-code</code>)</p> </li> </ol> <ol> <li>On the repo click Code then Download Zip and then wait until it finishes</li> <li>Extract it somewhere eg. <code>C:\\Users\\Alex\\Documents</code></li> <li>Go into the directory it extracted to (eg. <code>C:\\Users\\Alex\\Documents\\roblox-2016-source-code\\roblox-2016-source-code</code>)</li> </ol>"},{"location":"building/#building-the-project","title":"Building the project","text":""},{"location":"building/#building-for-windows","title":"Building for Windows","text":"<p>This assumes you have already built/installed the required project depedencies, if not go to Building Contribs</p>"},{"location":"building/#open-project-solution","title":"Open project solution","text":"<p>If you have VS2022 installed you can view using that Click on Client_2016.sln inside your project directory</p> <p>Warning</p> <p>If it prompts you with \"Review Solution Actions\" then ignore it by pressing Cancel</p>"},{"location":"building/#building-roblox-depedencies","title":"Building Roblox depedencies","text":"<p>These depdencies are required before building any of the projects (RCCService, RobloxStudio, WindowsClient)</p> <p>It is recommended to follow the provided order</p> <p>To build the target dependency right click and click build</p> <ul> <li>3rd Party:<ul> <li><code>boost.static</code></li> <li><code>zlib</code></li> </ul> </li> <li>gSOAP:<ul> <li><code>soapcpp2</code></li> <li><code>wsdl2h</code></li> </ul> </li> <li>Shaders:<ul> <li><code>ShaderCompiler</code></li> </ul> </li> <li>Rendering:<ul> <li><code>LibOVR</code></li> </ul> </li> <li>Core Components:<ul> <li><code>qtnribbon</code></li> <li><code>sgCore</code></li> <li><code>CoreScriptConverter2</code> (only needed for Release/Debug when building WindowsClient)</li> </ul> </li> </ul>"},{"location":"building/#building-your-target-project","title":"Building your target project","text":"<p>Right click on your target project (Must be WindowsClient, RobloxStudio or RCCService) and click build</p>"},{"location":"building/#building-for-android","title":"Building for Android","text":"<p>This assumes you have already built/installed the Android Depedencies, if not go to Installing Requirements</p> <ol> <li>Open the <code>local.properties</code> file found in <code>&lt;Your Project Directory&gt;/Android/</code> in any text editor</li> <li>Build libroblox.so for your platform with legacy mode</li> <li>Pack the OBB assets</li> <li>Build RobloxHybrid</li> <li>then Build APK</li> </ol>"},{"location":"building_contribs/","title":"Building Contribs","text":"<p>!!! \"note READ THIS BEFORE STARTING!!\"</p> <ul> <li><code>\"&lt;your path&gt;\"</code> refers to the location where your source code resides (e.g., <code>C:\\</code>)</li> <li><code>\"&lt;your folder name&gt;\"</code> refers to the name of the folder containing the source code (e.g., <code>Trunk2016</code>)</li> <li>\u26a0\ufe0f Please note: Technical knowledge is required. We cannot assist with every individual problem you encounter.</li> </ul>"},{"location":"building_contribs/#qt","title":"Qt","text":"Prebuit Copy (Recommended) <ol> <li>Download Qt.7z from https://gofile.io/d/Plze0w</li> <li>Extract it in the Contribs/ folder</li> </ol>"},{"location":"building_contribs/#boost","title":"Boost","text":"<ol> <li>Go to: <code>&lt;your path&gt;\\&lt;your folder name&gt;\\Contribs\\boost_1_56_0\\</code></li> <li>Run: <code>bootstrap.bat</code></li> <li> <p>When it's done, run: <code>build_boost.bat</code> \u2014 this will start compiling the Boost library.</p> </li> <li> <p>If you get errors related to Python, don\u2019t worry \u2014 they\u2019re harmless and won\u2019t affect compilation.</p> </li> </ol> <p>Once it finishes, you should see something like:</p> <pre><code>...failed updating 56 targets...\n...skipped 8 targets...\n...updated 1095 targets...\n</code></pre>"},{"location":"building_contribs/#openssl","title":"OpenSSL","text":"<ol> <li>Install Strawberry Perl to proceed with the build.</li> <li>Open Developer Command Prompt for VS2012</li> <li>Navigate (<code>cd</code>) to: <code>&lt;your path&gt;\\&lt;your folder name&gt;\\Contribs\\openssl</code></li> <li>Run: <code>perl Configure VC-WIN32</code></li> <li>If you get an error like <code>'perl' is not recognized...</code>, make sure Strawberry Perl was installed correctly.</li> <li>Next, run:</li> </ol> <pre><code>ms\\32all.bat\n</code></pre> <ol> <li>Create a folder named <code>openssl</code> inside <code>&lt;your folder name&gt;</code></li> <li>When the build completes, go to: <code>&lt;your path&gt;\\&lt;your folder name&gt;\\Contribs\\openssl\\out32dll</code>    and copy these two files(<code>ssleay32.dll</code> <code>libeay32.dll</code>) to: <code>&lt;your path&gt;\\&lt;your folder name&gt;\\openssl</code></li> </ol>"},{"location":"building_contribs/#sdl2","title":"SDL2","text":"<ol> <li>Locate the SDL2 project under: <code>3rd Party &gt; SDL2</code></li> <li>Right-click the project and select Build</li> </ol> <p>To build SDL2 as a <code>.DLL</code>:</p> <ul> <li>Go to Properties</li> <li>Change:</li> <li>Target Extension \u2192 <code>.dll</code></li> <li>Configuration Type \u2192 <code>Dynamic Library (.dll)</code></li> <li>Remove <code>HAVE_LIBC;</code> from: <code>C/C++ &gt; Preprocessor &gt; Preprocessor Definitions</code></li> <li>Build the project.</li> </ul> <p>To build as a <code>.LIB</code>, you don\u2019t need to change anything \u2014 just build it as is.</p>"},{"location":"building_contribs/#libcurl","title":"libcurl","text":"<ol> <li>Locate the libcurl project under: <code>3rd Party &gt; libcurl</code></li> <li>Right-click the project and select Build</li> </ol> <p>To build libcurl as a <code>.LIB</code>:</p> <ul> <li>Go to Properties</li> <li>Change:</li> <li>Target Extension \u2192 <code>.lib</code></li> <li>Configuration Type \u2192 <code>Static Library (.lib)</code></li> <li>Build the project.</li> </ul> <p>To build as a <code>.DLL</code>, no changes are needed \u2014 just build it as is.</p> <p>\u2705 That's it \u2014 you've compiled the contrib libraries! </p> <p>\ud83d\udca1 You might also want to replace the library or DLL files in your source directory with the versions you\u2019ve just built.</p>"},{"location":"features/","title":"Features","text":""},{"location":"features/#implemented-features","title":"Implemented Features","text":"<ul> <li>Numerous new features have been added and we're still improving!</li> <li>Compilation-breaking issues have been fixed to ensure all projects work as intended.</li> <li>The entire source has been cleaned up for clarity and ease of use.</li> <li>Splash Screen and Copyright Dates updated.</li> <li>Reverse-engineered several C# libraries and executables using ILSpy to make the source accessible.</li> </ul>"},{"location":"features/#problems","title":"Problems","text":"<pre><code>- Undo/Redo does not handle `Color3` properties accurately; they often revert to the nearest `BrickColor` value.\n- This can lead to inconsistencies, especially with `BodyColors`.\n</code></pre>"},{"location":"features/#solution-status","title":"Solution Status","text":"<p>TESTED ON VS2022 (WITH PROJECTS TARGETTING VS2012 - WINDOWS XP)</p> <p>Some of these projects are not included as they are broken</p>"},{"location":"features/#normal-solutions","title":"Normal Solutions","text":"Solution Tested Able to Compile Android [ ] No UNTESTED App [ ] No UNTESTED App.BulletPhysics [ ] No UNTESTED Base [ ] No UNTESTED"},{"location":"features/#3rd-party-solutions","title":"3rd Party Solutions","text":""},{"location":"features/#rendering-solutions","title":"Rendering Solutions","text":""},{"location":"features/#todo","title":"Todo","text":"<ul> <li>Backport/Implement Hitius, Graphictoria and Economy Simulator Features</li> <li> Color3uint8  <ul> <li> Color3.fromRGB()  </li> </ul> </li> <li> R15 character support  </li> <li> :Connect() and :Wait()</li> <li> New Fonts</li> <li> Move unrelated files out of the content\\fonts folder</li> <li> Support for newer mesh formats</li> <li> Add Cyrillic and non-Latin language support  </li> <li> UTF/Unicode compatibility  </li> <li> Improve profanity and swear word filter  </li> <li> Add or port new Lua version</li> <li> Support for newer place versions</li> <li> Add dark theme for Studio  </li> <li> Fix in-game recording issues</li> <li> Build all projects in the source using the latest Visual Studio version  </li> <li> Ensure support for the latest C/C++ standards (C++17 or later)  </li> <li> Enable 64-bit support across all applicable projects</li> </ul>"}]}